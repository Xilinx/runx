.build-tmpl: &build
  stage: build
  image: registry.gitlab.com/lf-edge/runx/${CONTAINER}
  script:
    - ./automation/scripts/build 2>&1 | tee build.log
  artifacts:
    paths:
      - binaries/
      - target/
      - '*.log'
    when: always
  except:
    - master
    - smoke
    - /^coverity-tested\/.*/
    - /^stable-.*/

.gcc-tmpl:
  variabes: &gcc
    CC: gcc
    CXX: g++

.arm64-build-tmpl:
  <<: *build
  variables:
    ARCH: arm64

.arm64-build:
  extends: .arm64-build-tmpl
  variables:
    debug: n

.gcc-arm64-build:
  extends: .arm64-build
  variables:
    <<: *gcc

# Arm builds

alpine-3.12-gcc-arm64:
  extends: .gcc-arm64-build
  variables:
    CONTAINER: debian:unstable
    CROSS_COMPILE: /usr/bin/aarch64-linux-gnu-
  tags:
    - x86

# Arm test artifacts

alpine-3.12-arm64-rootfs-export:
  stage: build
  image: registry.gitlab.com/lf-edge/runx/tests-artifacts/alpine:3.12-arm64v8
  script:
    - mkdir binaries && cp /initrd.tar.gz binaries/initrd.tar.gz
  artifacts:
    paths:
      - binaries/initrd.tar.gz
  tags:
    - x86

kernel-5.10.30-arm64-export:
  stage: build
  image: registry.gitlab.com/lf-edge/runx/tests-artifacts/kernel:5.10.30-arm64v8
  script:
    - mkdir binaries && cp /Image binaries/Image
  artifacts:
    paths:
      - binaries/Image
  tags:
    - x86

u-boot-2021.07-arm64-export:
  stage: build
  image: registry.gitlab.com/lf-edge/runx/tests-artifacts/u-boot:2021.07-arm64v8
  script:
    - mkdir binaries && cp /u-boot.bin binaries/u-boot.bin
  artifacts:
    paths:
      - binaries/u-boot.bin
  tags:
    - x86

xen-4.14-arm64-export:
  stage: build
  image: registry.gitlab.com/lf-edge/runx/tests-artifacts/xen:4.14-arm64v8
  script:
    - mkdir binaries && cp /xen.tar.gz binaries/xen.tar.gz
  artifacts:
    paths:
      - binaries/xen.tar.gz
  tags:
    - x86
